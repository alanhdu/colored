from __future__ import division
import numpy as np

_bwr_data = [(0, (0.0, 0.0, 1.0)), (1/2, (1.0, 1.0, 1.0)), (1, (1.0, 0.0, 0.0))]
_brg_data = [(0, (0.0, 0.0, 1.0)), (1/2, (1.0, 0.0, 0.0)), (1, (0.0, 1.0, 0.0))]

_seismic_data = [
    (0,   (0.0, 0.0, 0.3)), 
    (1/4, (0.0, 0.0, 1.0)),
    (2/4, (1.0, 1.0, 1.0)),
    (3/4, (1.0, 0.0, 0.0)),
    (1,   (0.5, 0.0, 0.0))
]

_terrain_data = [
    (0.00, (0.2, 0.2, 0.6)),
    (0.15, (0.0, 0.6, 1.0)),
    (0.25, (0.0, 0.8, 0.4)),
    (0.50, (1.0, 1.0, 0.6)),
    (0.75, (0.5, 0.36, 0.33)),
    (1.00, (1.0, 1.0, 1.0))
]

_flag_data = {
    'red': lambda x: 0.75 * np.sin((x * 31.5 + 0.25) * np.pi) + 0.5,
    'green': lambda x: np.sin(x * 31.5 * np.pi),
    'blue': lambda x: 0.75 * np.sin((x * 31.5 - 0.25) * np.pi) + 0.5,
}

_prism_data = {
    'red': lambda x: 0.75 * np.sin((x * 20.9 + 0.25) * np.pi) + 0.67,
    'green': lambda x: 0.75 * np.sin((x * 20.9 - 0.25) * np.pi) + 0.33,
    'blue': lambda x: -1.1 * np.sin((x * 20.9) * np.pi),
}

def cubehelix(gamma=1.0, s=0.5, r=-1.5, h=1.0):
    """Return custom data dictionary of (r,g,b) conversion functions, which
    can be used with :func:`register_cmap`, for the cubehelix color scheme.

    Unlike most other color schemes cubehelix was designed by D.A. Green to
    be monotonically increasing in terms of perceived brightness.
    Also, when printed on a black and white postscript printer, the scheme
    results in a greyscale with monotonically increasing brightness.
    This color scheme is named cubehelix because the r,g,b values produced
    can be visualised as a squashed helix around the diagonal in the
    r,g,b color cube.

    For a unit color cube (i.e. 3-D coordinates for r,g,b each in the
    range 0 to 1) the color scheme starts at (r,g,b) = (0,0,0), i.e. black,
    and finishes at (r,g,b) = (1,1,1), i.e. white. For some fraction *x*,
    between 0 and 1, the color is the corresponding grey value at that
    fraction along the black to white diagonal (x,x,x) plus a color
    element. This color element is calculated in a plane of constant
    perceived intensity and controlled by the following parameters.

    Optional keyword arguments:

      =========   =======================================================
      Keyword     Description
      =========   =======================================================
      gamma       gamma factor to emphasise either low intensity values
                  (gamma < 1), or high intensity values (gamma > 1);
                  defaults to 1.0.
      s           the start color; defaults to 0.5 (i.e. purple).
      r           the number of r,g,b rotations in color that are made
                  from the start to the end of the color scheme; defaults
                  to -1.5 (i.e. -> B -> G -> R -> B).
      h           the hue parameter which controls how saturated the
                  colors are. If this parameter is zero then the color
                  scheme is purely a greyscale; defaults to 1.0.
      =========   =======================================================

    """

    def get_color_function(p0, p1):

        def color(x):
            # Apply gamma factor to emphasise low or high intensity values
            xg = x ** gamma

            # Calculate amplitude and angle of deviation from the black
            # to white diagonal in the plane of constant
            # perceived intensity.
            a = h * xg * (1 - xg) / 2

            phi = 2 * np.pi * (s / 3 + r * x)

            return xg + a * (p0 * np.cos(phi) + p1 * np.sin(phi))
        return color

    return {'red': get_color_function(-0.14861, 1.78277),
            'green': get_color_function(-0.29227, -0.90649),
            'blue': get_color_function(1.97294, 0.0)}

_cubehelix_data = cubehelix()

# Gnuplot palette functions
gfunc = {
    0: lambda x: 0,
    1: lambda x: 0.5,
    2: lambda x: 1,
    3: lambda x: x,
    4: lambda x: x ** 2,
    5: lambda x: x ** 3,
    6: lambda x: x ** 4,
    7: lambda x: np.sqrt(x),
    8: lambda x: np.sqrt(np.sqrt(x)),
    9: lambda x: np.sin(x * np.pi / 2),
    10: lambda x: np.cos(x * np.pi / 2),
    11: lambda x: np.abs(x - 0.5),
    12: lambda x: (2 * x - 1) ** 2,
    13: lambda x: np.sin(x * np.pi),
    14: lambda x: np.abs(np.cos(x * np.pi)),
    15: lambda x: np.sin(x * 2 * np.pi),
    16: lambda x: np.cos(x * 2 * np.pi),
    17: lambda x: np.abs(np.sin(x * 2 * np.pi)),
    18: lambda x: np.abs(np.cos(x * 2 * np.pi)),
    19: lambda x: np.abs(np.sin(x * 4 * np.pi)),
    20: lambda x: np.abs(np.cos(x * 4 * np.pi)),
    21: lambda x: 3 * x,
    22: lambda x: 3 * x - 1,
    23: lambda x: 3 * x - 2,
    24: lambda x: np.abs(3 * x - 1),
    25: lambda x: np.abs(3 * x - 2),
    26: lambda x: (3 * x - 1) / 2,
    27: lambda x: (3 * x - 2) / 2,
    28: lambda x: np.abs((3 * x - 1) / 2),
    29: lambda x: np.abs((3 * x - 2) / 2),
    30: lambda x: x / 0.32 - 0.78125,
    31: lambda x: 2 * x - 0.84,
    32: lambda x: gfunc32(x),
    33: lambda x: np.abs(2 * x - 0.5),
    34: lambda x: 2 * x,
    35: lambda x: 2 * x - 0.5,
    36: lambda x: 2 * x - 1.
}


def gfunc32(x):
    ret = np.zeros(len(x))
    m = (x < 0.25)
    ret[m] = 4 * x[m]
    m = (x >= 0.25) & (x < 0.92)
    ret[m] = -2 * x[m] + 1.84
    m = (x >= 0.92)
    ret[m] = x[m] / 0.08 - 11.5
    return ret

_gnuplot_data = {
    'red': gfunc[7],
    'green': gfunc[5],
    'blue': gfunc[15],
}

_gnuplot2_data = {
    'red': gfunc[30],
    'green': gfunc[31],
    'blue': gfunc[32],
}

_ocean_data = {
    'red': gfunc[23],
    'green': gfunc[28],
    'blue': gfunc[3],
}

_afmhot_data = {
    'red': gfunc[34],
    'green': gfunc[35],
    'blue': gfunc[36],
}

_rainbow_data = {
    'red': gfunc[33],
    'green': gfunc[13],
    'blue': gfunc[10],
}

_autumn_data = [(0.0, (1, 0, 0)), (1, (1, 1, 0))]

_bone_data = {
    'red':   ((0., 0), (0.746032, 0.652778), (1.0, 1.0)),
    'green': ((0., 0.), (0.365079, 0.319444), (0.746032, 7 / 9), (1.0, 1.0)),
    'blue':  ((0., 0), (0.365079, 4 / 9), (1.0, 1.0))
}

_binary_data = [(0, (1, 1, 1)), (1, (0, 0, 0))]

# Implementation of Carey Rappaport's CMRmap.
# See `A Color Map for Effective Black-and-White Rendering of Color-Scale
# Images' by Carey Rappaport
# http://www.mathworks.com/matlabcentral/fileexchange/2662-cmrmap-m
_CMRmap_data = [
    (0.0, (0.0, 0.0, 0.0)),
    (0.125, (0.15, 0.15, 0.5)),
    (0.25, (0.3, 0.15, 0.75)),
    (0.375, (0.6, 0.2, 0.5)),
    (0.5, (1.0, 0.25, 0.15)),
    (0.625, (0.9, 0.5, 0.0)),
    (0.75, (0.9, 0.75, 0.1)),
    (0.875, (0.9, 0.9, 0.5)),
    (1.0, (1.0, 1.0, 1.0))
]

_cool_data = [(0.0, (0.0, 1.0, 1.0)), (1.0, (1.0, 0, 1))]

_copper_data = {
    'red':   ((0., 0.), (0.809524, 1), (1.0, 1.0, 1)),
    'green': ((0., 0.), (1.0, 0.7812)),
    'blue':  ((0., 0.), (1.0, 0.4975))
}

_gray_data = [(0.0, (0, 0, 0)), (1.0, (1, 1, 1))]

_hot_data = {
    'red':   ((0., 0.0416, 0.0416),
              (0.365079, 1.000000, 1.000000),
              (1.0, 1.0, 1.0)),
    'green': ((0., 0., 0.),
              (0.365079, 0.000000, 0.000000),
              (0.746032, 1.000000, 1.000000),
              (1.0, 1.0, 1.0)),
    'blue':  ((0., 0., 0.),
              (0.746032, 0.000000, 0.000000),
              (1.0, 1.0, 1.0))
}

_hsv_data = {
    'red':   ((0., 1., 1.),
              (0.158730, 1.000000, 1.000000),
              (0.174603, 0.968750, 0.968750),
              (0.333333, 0.031250, 0.031250),
              (0.349206, 0.000000, 0.000000),
              (0.666667, 0.000000, 0.000000),
              (0.682540, 0.031250, 0.031250),
              (0.841270, 0.968750, 0.968750),
              (0.857143, 1.000000, 1.000000),
              (1.0, 1.0, 1.0)),
    'green': ((0., 0., 0.),
              (0.158730, 0.937500, 0.937500),
              (0.174603, 1.000000, 1.000000),
              (0.507937, 1.000000, 1.000000),
              (0.666667, 0.062500, 0.062500),
              (0.682540, 0.000000, 0.000000),
              (1.0, 0., 0.)),
    'blue':  ((0., 0., 0.),
              (0.333333, 0.000000, 0.000000),
              (0.349206, 0.062500, 0.062500),
              (0.507937, 1.000000, 1.000000),
              (0.841270, 1.000000, 1.000000),
              (0.857143, 0.937500, 0.937500),
              (1.0, 0.09375, 0.09375))}

_jet_data = {
    'red':   ((0., 0, 0), (0.35, 0, 0), (0.66, 1, 1), (0.89, 1, 1), (1, 0.5, 0.5)),
    'green': ((0., 0, 0), (0.125, 0, 0), (0.375, 1, 1), (0.64, 1, 1), (0.91, 0, 0), (1, 0, 0)),
    'blue':  ((0., 0.5, 0.5), (0.11, 1, 1), (0.34, 1, 1), (0.65, 0, 0), (1, 0, 0))
}

_pink_data = [
    (0.0, (0.1178, 0.0, 0.0)),
    (0.015873, (0.195857, 0.102869, 0.102869)),
    (0.031746, (0.250661, 0.145479, 0.145479)),
    (0.047619, (0.295468, 0.178174, 0.178174)),
    (0.063492, (0.334324, 0.205738, 0.205738)),
    (0.079365, (0.369112, 0.230022, 0.230022)),
    (0.095238, (0.400892, 0.251976, 0.251976)),
    (0.111111, (0.430331, 0.272166, 0.272166)),
    (0.126984, (0.457882, 0.290957, 0.290957)),
    (0.142857, (0.483867, 0.308607, 0.308607)),
    (0.15873, (0.508525, 0.3253, 0.3253)),
    (0.174603, (0.532042, 0.341178, 0.341178)),
    (0.190476, (0.554563, 0.356348, 0.356348)),
    (0.206349, (0.576204, 0.370899, 0.370899)),
    (0.222222, (0.597061, 0.3849, 0.3849)),
    (0.238095, (0.617213, 0.39841, 0.39841)),
    (0.253968, (0.636729, 0.411476, 0.411476)),
    (0.269841, (0.655663, 0.424139, 0.424139)),
    (0.285714, (0.674066, 0.436436, 0.436436)),
    (0.301587, (0.69198, 0.448395, 0.448395)),
    (0.31746, (0.709441, 0.460044, 0.460044)),
    (0.333333, (0.726483, 0.471405, 0.471405)),
    (0.349206, (0.743134, 0.482498, 0.482498)),
    (0.365079, (0.759421, 0.493342, 0.493342)),
    (0.380952, (0.766356, 0.517549, 0.503953)),
    (0.396825, (0.773229, 0.540674, 0.514344)),
    (0.412698, (0.780042, 0.562849, 0.524531)),
    (0.428571, (0.786796, 0.584183, 0.534522)),
    (0.444444, (0.793492, 0.604765, 0.544331)),
    (0.460317, (0.800132, 0.624669, 0.553966)),
    (0.47619, (0.806718, 0.643958, 0.563436)),
    (0.492063, (0.81325, 0.662687, 0.57275)),
    (0.507937, (0.81973, 0.6809, 0.581914)),
    (0.52381, (0.82616, 0.698638, 0.590937)),
    (0.539683, (0.832539, 0.715937, 0.599824)),
    (0.555556, (0.83887, 0.732828, 0.608581)),
    (0.571429, (0.845154, 0.749338, 0.617213)),
    (0.587302, (0.851392, 0.765493, 0.625727)),
    (0.603175, (0.857584, 0.781313, 0.634126)),
    (0.619048, (0.863731, 0.796819, 0.642416)),
    (0.634921, (0.869835, 0.812029, 0.6506)),
    (0.650794, (0.875897, 0.82696, 0.658682)),
    (0.666667, (0.881917, 0.841625, 0.666667)),
    (0.68254, (0.887896, 0.85604, 0.674556)),
    (0.698413, (0.893835, 0.870216, 0.682355)),
    (0.714286, (0.899735, 0.884164, 0.690066)),
    (0.730159, (0.905597, 0.897896, 0.697691)),
    (0.746032, (0.911421, 0.911421, 0.705234)),
    (0.761905, (0.917208, 0.917208, 0.727166)),
    (0.777778, (0.922958, 0.922958, 0.748455)),
    (0.793651, (0.928673, 0.928673, 0.769156)),
    (0.809524, (0.934353, 0.934353, 0.789314)),
    (0.825397, (0.939999, 0.939999, 0.808969)),
    (0.84127, (0.945611, 0.945611, 0.828159)),
    (0.857143, (0.95119, 0.95119, 0.846913)),
    (0.873016, (0.956736, 0.956736, 0.865261)),
    (0.888889, (0.96225, 0.96225, 0.883229)),
    (0.904762, (0.967733, 0.967733, 0.900837)),
    (0.920635, (0.973185, 0.973185, 0.918109)),
    (0.936508, (0.978607, 0.978607, 0.935061)),
    (0.952381, (0.983999, 0.983999, 0.951711)),
    (0.968254, (0.989361, 0.989361, 0.968075)),
    (0.984127, (0.994695, 0.994695, 0.984167)),
    (1.0, (1.0, 1.0, 1.0))
]

_spring_data = [(0.0, (1.0, 0.0, 1.0)), (1.0, (1.0, 1.0, 0.0))]

_summer_data = [(0.0, (0.0, 0.5, 0.4)), (1.0, (1.0, 1.0, 0.4))]

_winter_data = [(0.0, (0.0, 0.0, 1.0)), (1.0, (0.0, 1.0, 0.5))]

_nipy_spectral_data = [(0.0, (0.0, 0.0, 0.0)), (0.05, (0.4667, 0.0, 0.5333)),
                       (0.1, (0.5333, 0.0, 0.6)), (0.15, (0.0, 0.0, 0.6667)),
                       (0.2, (0.0, 0.0, 0.8667)), (0.25, (0.0, 0.4667, 0.8667)),
                       (0.3, (0.0, 0.6, 0.8667)), (0.35, (0.0, 0.6667, 0.6667)),
                       (0.4, (0.0, 0.6667, 0.5333)), (0.45, (0.0, 0.6, 0.0)),
                       (0.5, (0.0, 0.7333, 0.0)), (0.55, (0.0, 0.8667, 0.0)),
                       (0.6, (0.0, 1.0, 0.0)), (0.65, (0.7333, 1.0, 0.0)),
                       (0.7, (0.9333, 0.9333, 0.0)), (0.75, (1.0, 0.8, 0.0)),
                       (0.8, (1.0, 0.6, 0.0)), (0.85, (1.0, 0.0, 0.0)),
                       (0.9, (0.8667, 0.0, 0.0)), (0.95, (0.8, 0.0, 0.0)),
                       (1.0, (0.8, 0.8, 0.8))]

# 34 colormaps based on color specifications and designs
# developed by Cynthia Brewer (http://colorbrewer.org).
# The ColorBrewer palettes have been included under the terms
# of an Apache-stype license (for details, see the file
# LICENSE_COLORBREWER in the license directory of the matplotlib
# source distribution).
_Accent_data = [
    (0.0, (0.49803921580314636, 0.7882353067398071, 0.49803921580314636)),
    (0.14285714285714285, (0.7450980544090271, 0.6823529601097107, 0.8313725590705872)),
    (0.2857142857142857, (0.9921568632125854, 0.7529411911964417, 0.5254902243614197)),
    (0.42857142857142855, (1.0, 1.0, 0.6000000238418579)),
    (0.5714285714285714, (0.21960784494876862, 0.42352941632270813, 0.6901960968971252)),
    (0.7142857142857143, (0.9411764740943909, 0.007843137718737125, 0.49803921580314636)),
    (0.8571428571428571, (0.7490196228027344, 0.35686275362968445, 0.09019608050584793)),
    (1.0, (0.4000000059604645, 0.4000000059604645, 0.4000000059604645))
]

_Blues_data = [
    (0.0, (0.9686274528503418, 0.9843137264251709, 1.0)),
    (0.125, (0.8705882430076599, 0.9215686321258545, 0.9686274528503418)),
    (0.25, (0.7764706015586853, 0.8588235378265381, 0.9372549057006836)),
    (0.375, (0.6196078658103943, 0.7921568751335144, 0.8823529481887817)),
    (0.5, (0.41960784792900085, 0.6823529601097107, 0.8392156958580017)),
    (0.625, (0.25882354378700256, 0.572549045085907, 0.7764706015586853)),
    (0.75, (0.12941177189350128, 0.4431372582912445, 0.7098039388656616)),
    (0.875, (0.0313725508749485, 0.3176470696926117, 0.6117647290229797)),
    (1.0, (0.0313725508749485, 0.1882352977991104, 0.41960784792900085))
]

_BrBG_data = [
    (0.0, (0.3294117748737335, 0.1882352977991104, 0.019607843831181526)),
    (0.1, (0.5490196347236633, 0.3176470696926117, 0.03921568766236305)),
    (0.2, (0.7490196228027344, 0.5058823823928833, 0.1764705926179886)),
    (0.3, (0.8745098114013672, 0.7607843279838562, 0.4901960790157318)),
    (0.4, (0.9647058844566345, 0.9098039269447327, 0.7647058963775635)),
    (0.5, (0.9607843160629272, 0.9607843160629272, 0.9607843160629272)),
    (0.6, (0.7803921699523926, 0.9176470637321472, 0.8980392217636108)),
    (0.7, (0.501960813999176, 0.8039215803146362, 0.7568627595901489)),
    (0.8, (0.2078431397676468, 0.5921568870544434, 0.5607843399047852)),
    (0.9, (0.003921568859368563, 0.4000000059604645, 0.3686274588108063)),
    (1.0, (0.0, 0.23529411852359772, 0.1882352977991104))
]

_BuGn_data = [
    (0.0, (0.9686274528503418, 0.9882352948188782, 0.9921568632125854)),
    (0.125, (0.8980392217636108, 0.9607843160629272, 0.9764705896377563)),
    (0.25, (0.800000011920929, 0.9254902005195618, 0.9019607901573181)),
    (0.375, (0.6000000238418579, 0.8470588326454163, 0.7882353067398071)),
    (0.5, (0.4000000059604645, 0.7607843279838562, 0.6431372761726379)),
    (0.625, (0.2549019753932953, 0.6823529601097107, 0.4627451002597809)),
    (0.75, (0.13725490868091583, 0.545098066329956, 0.2705882489681244)),
    (0.875, (0.0, 0.4274509847164154, 0.1725490242242813)),
    (1.0, (0.0, 0.2666666805744171, 0.10588235408067703))
]

_BuPu_data = [
    (0.0, (0.9686274528503418, 0.9882352948188782, 0.9921568632125854)),
    (0.125, (0.8784313797950745, 0.9254902005195618, 0.95686274766922)),
    (0.25, (0.7490196228027344, 0.8274509906768799, 0.9019607901573181)),
    (0.375, (0.6196078658103943, 0.7372549176216125, 0.8549019694328308)),
    (0.5, (0.5490196347236633, 0.5882353186607361, 0.7764706015586853)),
    (0.625, (0.5490196347236633, 0.41960784792900085, 0.6941176652908325)),
    (0.75, (0.5333333611488342, 0.2549019753932953, 0.615686297416687)),
    (0.875, (0.5058823823928833, 0.05882352963089943, 0.48627451062202454)),
    (1.0, (0.3019607961177826, 0.0, 0.29411765933036804))
]

_Dark2_data = [
    (0.0, (0.10588235408067703, 0.6196078658103943, 0.46666666865348816)),
    (0.14285714285714285, (0.8509804010391235, 0.37254902720451355, 0.007843137718737125)),
    (0.2857142857142857, (0.4588235318660736, 0.43921568989753723, 0.7019608020782471)),
    (0.42857142857142855, (0.9058823585510254, 0.16078431904315948, 0.5411764979362488)),
    (0.5714285714285714, (0.4000000059604645, 0.6509804129600525, 0.11764705926179886)),
    (0.7142857142857143, (0.9019607901573181, 0.6705882549285889, 0.007843137718737125)),
    (0.8571428571428571, (0.6509804129600525, 0.4627451002597809, 0.11372549086809158)),
    (1.0, (0.4000000059604645, 0.4000000059604645, 0.4000000059604645))]

_GnBu_data = [
    (0.0, (0.9686274528503418, 0.9882352948188782, 0.9411764740943909)),
    (0.125, (0.8784313797950745, 0.9529411792755127, 0.8588235378265381)),
    (0.25, (0.800000011920929, 0.9215686321258545, 0.772549033164978)),
    (0.375, (0.658823549747467, 0.8666666746139526, 0.7098039388656616)),
    (0.5, (0.48235294222831726, 0.800000011920929, 0.7686274647712708)),
    (0.625, (0.30588236451148987, 0.7019608020782471, 0.8274509906768799)),
    (0.75, (0.16862745583057404, 0.5490196347236633, 0.7450980544090271)),
    (0.875, (0.0313725508749485, 0.40784314274787903, 0.6745098233222961)),
    (1.0, (0.0313725508749485, 0.250980406999588, 0.5058823823928833))
]

_Greens_data = [
    (0.0, (0.9686274528503418, 0.9882352948188782, 0.9607843160629272)),
    (0.125, (0.8980392217636108, 0.9607843160629272, 0.8784313797950745)),
    (0.25, (0.7803921699523926, 0.9137254953384399, 0.7529411911964417)),
    (0.375, (0.6313725709915161, 0.8509804010391235, 0.6078431606292725)),
    (0.5, (0.45490196347236633, 0.7686274647712708, 0.4627451002597809)),
    (0.625, (0.2549019753932953, 0.6705882549285889, 0.364705890417099)),
    (0.75, (0.13725490868091583, 0.545098066329956, 0.2705882489681244)),
    (0.875, (0.0, 0.4274509847164154, 0.1725490242242813)),
    (1.0, (0.0, 0.2666666805744171, 0.10588235408067703))
]

_Greys_data = [
    (0.0, (1.0, 1.0, 1.0)),
    (0.125, (0.9411764740943909, 0.9411764740943909, 0.9411764740943909)),
    (0.25, (0.8509804010391235, 0.8509804010391235, 0.8509804010391235)),
    (0.375, (0.7411764860153198, 0.7411764860153198, 0.7411764860153198)),
    (0.5, (0.5882353186607361, 0.5882353186607361, 0.5882353186607361)),
    (0.625, (0.45098039507865906, 0.45098039507865906, 0.45098039507865906)),
    (0.75, (0.32156863808631897, 0.32156863808631897, 0.32156863808631897)),
    (0.875, (0.14509804546833038, 0.14509804546833038, 0.14509804546833038)),
    (1.0, (0.0, 0.0, 0.0))
]

_Oranges_data = [
    (0.0, (1.0, 0.9607843160629272, 0.9215686321258545)),
    (0.125, (0.9960784316062927, 0.9019607901573181, 0.8078431487083435)),
    (0.25, (0.9921568632125854, 0.8156862854957581, 0.6352941393852234)),
    (0.375, (0.9921568632125854, 0.6823529601097107, 0.41960784792900085)),
    (0.5, (0.9921568632125854, 0.5529412031173706, 0.23529411852359772)),
    (0.625, (0.9450980424880981, 0.4117647111415863, 0.07450980693101883)),
    (0.75, (0.8509804010391235, 0.2823529541492462, 0.003921568859368563)),
    (0.875, (0.6509804129600525, 0.21176470816135406, 0.0117647061124444)),
    (1.0, (0.49803921580314636, 0.15294118225574493, 0.01568627543747425))]

_OrRd_data = [
    (0.0, (1.0, 0.9686274528503418, 0.9254902005195618)),
    (0.125, (0.9960784316062927, 0.9098039269447327, 0.7843137383460999)),
    (0.25, (0.9921568632125854, 0.8313725590705872, 0.6196078658103943)),
    (0.375, (0.9921568632125854, 0.7333333492279053, 0.5176470875740051)),
    (0.5, (0.9882352948188782, 0.5529412031173706, 0.3490196168422699)),
    (0.625, (0.9372549057006836, 0.3960784375667572, 0.2823529541492462)),
    (0.75, (0.843137264251709, 0.1882352977991104, 0.12156862765550613)),
    (0.875, (0.7019608020782471, 0.0, 0.0)),
    (1.0, (0.49803921580314636, 0.0, 0.0))]

_Paired_data = [
    (0.0, (0.6509804129600525, 0.8078431487083435, 0.8901960849761963)),
    (0.09090909090909091, (0.12156862765550613, 0.47058823704719543, 0.7058823704719543)),
    (0.18181818181818182, (0.6980392336845398, 0.8745098114013672, 0.5411764979362488)),
    (0.2727272727272727, (0.20000000298023224, 0.6274510025978088, 0.1725490242242813)),
    (0.36363636363636365, (0.9843137264251709, 0.6039215922355652, 0.6000000238418579)),
    (0.45454545454545453, (0.8901960849761963, 0.10196078568696976, 0.10980392247438431)),
    (0.5454545454545454, (0.9921568632125854, 0.7490196228027344, 0.43529412150382996)),
    (0.6363636363636364, (1.0, 0.49803921580314636, 0.0)),
    (0.7272727272727273, (0.7921568751335144, 0.6980392336845398, 0.8392156958580017)),
    (0.8181818181818182, (0.4156862795352936, 0.239215686917305, 0.6039215922355652)),
    (0.9090909090909091, (1.0, 1.0, 0.6000000238418579)),
    (1.0, (0.6941176652908325, 0.3490196168422699, 0.1568627506494522))
]

_Pastel1_data = [
    (0.0, (0.9843137264251709, 0.7058823704719543, 0.6823529601097107)),
    (0.125, (0.7019608020782471, 0.8039215803146362, 0.8901960849761963)),
    (0.25, (0.800000011920929, 0.9215686321258545, 0.772549033164978)),
    (0.375, (0.8705882430076599, 0.7960784435272217, 0.8941176533699036)),
    (0.5, (0.9960784316062927, 0.8509804010391235, 0.6509804129600525)),
    (0.625, (1.0, 1.0, 0.800000011920929)),
    (0.75, (0.8980392217636108, 0.8470588326454163, 0.7411764860153198)),
    (0.875, (0.9921568632125854, 0.8549019694328308, 0.9254902005195618)),
    (1.0, (0.9490196108818054, 0.9490196108818054, 0.9490196108818054))
]

_Pastel2_data = [
    (0.0, (0.7019608020782471, 0.886274516582489, 0.8039215803146362)),
    (0.14285714285714285, (0.9921568632125854, 0.8039215803146362, 0.6745098233222961)),
    (0.2857142857142857, (0.7960784435272217, 0.8352941274642944, 0.9098039269447327)),
    (0.42857142857142855, (0.95686274766922, 0.7921568751335144, 0.8941176533699036)),
    (0.5714285714285714, (0.9019607901573181, 0.9607843160629272, 0.7882353067398071)),
    (0.7142857142857143, (1.0, 0.9490196108818054, 0.6823529601097107)),
    (0.8571428571428571, (0.9450980424880981, 0.886274516582489, 0.800000011920929)),
    (1.0, (0.800000011920929, 0.800000011920929, 0.800000011920929))
]

_PiYG_data = [
    (0.0, (0.5568627715110779, 0.003921568859368563, 0.32156863808631897)),
    (0.1, (0.772549033164978, 0.10588235408067703, 0.4901960790157318)),
    (0.2, (0.8705882430076599, 0.46666666865348816, 0.6823529601097107)),
    (0.3, (0.9450980424880981, 0.7137255072593689, 0.8549019694328308)),
    (0.4, (0.9921568632125854, 0.8784313797950745, 0.9372549057006836)),
    (0.5, (0.9686274528503418, 0.9686274528503418, 0.9686274528503418)),
    (0.6, (0.9019607901573181, 0.9607843160629272, 0.8156862854957581)),
    (0.7, (0.7215686440467834, 0.8823529481887817, 0.5254902243614197)),
    (0.8, (0.49803921580314636, 0.7372549176216125, 0.2549019753932953)),
    (0.9, (0.3019607961177826, 0.572549045085907, 0.12941177189350128)),
    (1.0, (0.15294118225574493, 0.3921568691730499, 0.09803921729326248))
]

_PRGn_data = [
    (0.0, (0.250980406999588, 0.0, 0.29411765933036804)),
    (0.1, (0.4627451002597809, 0.16470588743686676, 0.5137255191802979)),
    (0.2, (0.6000000238418579, 0.43921568989753723, 0.6705882549285889)),
    (0.3, (0.7607843279838562, 0.6470588445663452, 0.8117647171020508)),
    (0.4, (0.9058823585510254, 0.8313725590705872, 0.9098039269447327)),
    (0.5, (0.9686274528503418, 0.9686274528503418, 0.9686274528503418)),
    (0.6, (0.8509804010391235, 0.9411764740943909, 0.8274509906768799)),
    (0.7, (0.6509804129600525, 0.8588235378265381, 0.6274510025978088)),
    (0.8, (0.3529411852359772, 0.6823529601097107, 0.3803921639919281)),
    (0.9, (0.10588235408067703, 0.47058823704719543, 0.21568627655506134)),
    (1.0, (0.0, 0.2666666805744171, 0.10588235408067703))
]

_PuBu_data = [
    (0.0, (1.0, 0.9686274528503418, 0.9843137264251709)),
    (0.125, (0.9254902005195618, 0.9058823585510254, 0.9490196108818054)),
    (0.25, (0.8156862854957581, 0.8196078538894653, 0.9019607901573181)),
    (0.375, (0.6509804129600525, 0.7411764860153198, 0.8588235378265381)),
    (0.5, (0.45490196347236633, 0.6627451181411743, 0.8117647171020508)),
    (0.625, (0.21176470816135406, 0.5647059082984924, 0.7529411911964417)),
    (0.75, (0.019607843831181526, 0.43921568989753723, 0.6901960968971252)),
    (0.875, (0.01568627543747425, 0.3529411852359772, 0.5529412031173706)),
    (1.0, (0.007843137718737125, 0.21960784494876862, 0.3450980484485626))
]

_PuBuGn_data = [
    (0.0, (1.0, 0.9686274528503418, 0.9843137264251709)),
    (0.125, (0.9254902005195618, 0.886274516582489, 0.9411764740943909)),
    (0.25, (0.8156862854957581, 0.8196078538894653, 0.9019607901573181)),
    (0.375, (0.6509804129600525, 0.7411764860153198, 0.8588235378265381)),
    (0.5, (0.40392157435417175, 0.6627451181411743, 0.8117647171020508)),
    (0.625, (0.21176470816135406, 0.5647059082984924, 0.7529411911964417)),
    (0.75, (0.007843137718737125, 0.5058823823928833, 0.5411764979362488)),
    (0.875, (0.003921568859368563, 0.42352941632270813, 0.3490196168422699)),
    (1.0, (0.003921568859368563, 0.27450981736183167, 0.21176470816135406))
]

_PuOr_data = [
    (0.0, (0.49803921580314636, 0.23137255012989044, 0.0313725508749485)),
    (0.1, (0.7019608020782471, 0.3450980484485626, 0.0235294122248888)),
    (0.2, (0.8784313797950745, 0.5098039507865906, 0.0784313753247261)),
    (0.3, (0.9921568632125854, 0.7215686440467834, 0.38823530077934265)),
    (0.4, (0.9960784316062927, 0.8784313797950745, 0.7137255072593689)),
    (0.5, (0.9686274528503418, 0.9686274528503418, 0.9686274528503418)),
    (0.6, (0.8470588326454163, 0.8549019694328308, 0.9215686321258545)),
    (0.7, (0.6980392336845398, 0.6705882549285889, 0.8235294222831726)),
    (0.8, (0.501960813999176, 0.45098039507865906, 0.6745098233222961)),
    (0.9, (0.3294117748737335, 0.15294118225574493, 0.5333333611488342)),
    (1.0, (0.1764705926179886, 0.0, 0.29411765933036804))
]

_PuRd_data = [
    (0.0, (0.9686274528503418, 0.95686274766922, 0.9764705896377563)),
    (0.125, (0.9058823585510254, 0.8823529481887817, 0.9372549057006836)),
    (0.25, (0.8313725590705872, 0.7254902124404907, 0.8549019694328308)),
    (0.375, (0.7882353067398071, 0.5803921818733215, 0.7803921699523926)),
    (0.5, (0.8745098114013672, 0.3960784375667572, 0.6901960968971252)),
    (0.625, (0.9058823585510254, 0.16078431904315948, 0.5411764979362488)),
    (0.75, (0.8078431487083435, 0.07058823853731155, 0.33725491166114807)),
    (0.875, (0.5960784554481506, 0.0, 0.26274511218070984)),
    (1.0, (0.40392157435417175, 0.0, 0.12156862765550613))
]

_Purples_data = [
    (0.0, (0.9882352948188782, 0.9843137264251709, 0.9921568632125854)),
    (0.125, (0.9372549057006836, 0.929411768913269, 0.9607843160629272)),
    (0.25, (0.8549019694328308, 0.8549019694328308, 0.9215686321258545)),
    (0.375, (0.7372549176216125, 0.7411764860153198, 0.8627451062202454)),
    (0.5, (0.6196078658103943, 0.6039215922355652, 0.7843137383460999)),
    (0.625, (0.501960813999176, 0.4901960790157318, 0.729411780834198)),
    (0.75, (0.4156862795352936, 0.3176470696926117, 0.6392157077789307)),
    (0.875, (0.3294117748737335, 0.15294118225574493, 0.5607843399047852)),
    (1.0, (0.24705882370471954, 0.0, 0.4901960790157318))]

_RdBu_data = [
    (0.0, (0.40392157435417175, 0.0, 0.12156862765550613)),
    (0.1, (0.6980392336845398, 0.0941176488995552, 0.16862745583057404)),
    (0.2, (0.8392156958580017, 0.3764705955982208, 0.3019607961177826)),
    (0.3, (0.95686274766922, 0.6470588445663452, 0.5098039507865906)),
    (0.4, (0.9921568632125854, 0.8588235378265381, 0.7803921699523926)),
    (0.5, (0.9686274528503418, 0.9686274528503418, 0.9686274528503418)),
    (0.6, (0.8196078538894653, 0.8980392217636108, 0.9411764740943909)),
    (0.7, (0.572549045085907, 0.772549033164978, 0.8705882430076599)),
    (0.8, (0.26274511218070984, 0.5764706134796143, 0.7647058963775635)),
    (0.9, (0.12941177189350128, 0.4000000059604645, 0.6745098233222961)),
    (1.0, (0.019607843831181526, 0.1882352977991104, 0.3803921639919281))
]

_RdGy_data = [
    (0.0, (0.40392157435417175, 0.0, 0.12156862765550613)),
    (0.1, (0.6980392336845398, 0.0941176488995552, 0.16862745583057404)),
    (0.2, (0.8392156958580017, 0.3764705955982208, 0.3019607961177826)),
    (0.3, (0.95686274766922, 0.6470588445663452, 0.5098039507865906)),
    (0.4, (0.9921568632125854, 0.8588235378265381, 0.7803921699523926)),
    (0.5, (1.0, 1.0, 1.0)),
    (0.6, (0.8784313797950745, 0.8784313797950745, 0.8784313797950745)),
    (0.7, (0.729411780834198, 0.729411780834198, 0.729411780834198)),
    (0.8, (0.529411792755127, 0.529411792755127, 0.529411792755127)),
    (0.9, (0.3019607961177826, 0.3019607961177826, 0.3019607961177826)),
    (1.0, (0.10196078568696976, 0.10196078568696976, 0.10196078568696976))
]

_RdPu_data = [
    (0.0, (1.0, 0.9686274528503418, 0.9529411792755127)),
    (0.125, (0.9921568632125854, 0.8784313797950745, 0.8666666746139526)),
    (0.25, (0.9882352948188782, 0.772549033164978, 0.7529411911964417)),
    (0.375, (0.9803921580314636, 0.6235294342041016, 0.7098039388656616)),
    (0.5, (0.9686274528503418, 0.40784314274787903, 0.6313725709915161)),
    (0.625, (0.8666666746139526, 0.20392157137393951, 0.5921568870544434)),
    (0.75, (0.6823529601097107, 0.003921568859368563, 0.4941176474094391)),
    (0.875, (0.47843137383461, 0.003921568859368563, 0.46666666865348816)),
    (1.0, (0.2862745225429535, 0.0, 0.4156862795352936))
]

_RdYlBu_data = [
    (0.0, (0.6470588445663452, 0.0, 0.14901961386203766)),
    (0.10000000149011612, (0.843137264251709, 0.1882352977991104, 0.15294118225574493)),
    (0.20000000298023224, (0.95686274766922, 0.4274509847164154, 0.26274511218070984)),
    (0.30000001192092896, (0.9921568632125854, 0.6823529601097107, 0.3803921639919281)),
    (0.4000000059604645, (0.9960784316062927, 0.8784313797950745, 0.5647059082984924)),
    (0.5, (1.0, 1.0, 0.7490196228027344)),
    (0.6000000238418579, (0.8784313797950745, 0.9529411792755127, 0.9725490212440491)),
    (0.699999988079071, (0.6705882549285889, 0.8509804010391235, 0.9137254953384399)),
    (0.800000011920929, (0.45490196347236633, 0.6784313917160034, 0.8196078538894653)),
    (0.8999999761581421, (0.2705882489681244, 0.4588235318660736, 0.7058823704719543)),
    (1.0, (0.1921568661928177, 0.21176470816135406, 0.5843137502670288))
]

_RdYlGn_data = [
    (0.0, (0.6470588445663452, 0.0, 0.14901961386203766)),
    (0.1, (0.843137264251709, 0.1882352977991104, 0.15294118225574493)),
    (0.2, (0.95686274766922, 0.4274509847164154, 0.26274511218070984)),
    (0.3, (0.9921568632125854, 0.6823529601097107, 0.3803921639919281)),
    (0.4, (0.9960784316062927, 0.8784313797950745, 0.545098066329956)),
    (0.5, (1.0, 1.0, 0.7490196228027344)),
    (0.6, (0.8509804010391235, 0.9372549057006836, 0.545098066329956)),
    (0.7, (0.6509804129600525, 0.8509804010391235, 0.4156862795352936)),
    (0.8, (0.4000000059604645, 0.7411764860153198, 0.38823530077934265)),
    (0.9, (0.10196078568696976, 0.5960784554481506, 0.3137255012989044)),
    (1.0, (0.0, 0.40784314274787903, 0.21568627655506134))
]

_Reds_data = [
    (0.0, (1.0, 0.9607843160629272, 0.9411764740943909)),
    (0.125, (0.9960784316062927, 0.8784313797950745, 0.8235294222831726)),
    (0.25, (0.9882352948188782, 0.7333333492279053, 0.6313725709915161)),
    (0.375, (0.9882352948188782, 0.572549045085907, 0.4470588266849518)),
    (0.5, (0.9843137264251709, 0.4156862795352936, 0.29019609093666077)),
    (0.625, (0.9372549057006836, 0.23137255012989044, 0.1725490242242813)),
    (0.75, (0.7960784435272217, 0.0941176488995552, 0.11372549086809158)),
    (0.875, (0.6470588445663452, 0.05882352963089943, 0.08235294371843338)),
    (1.0, (0.40392157435417175, 0.0, 0.05098039284348488))
]

_Set1_data = [
    (0.0, (0.8941176533699036, 0.10196078568696976, 0.10980392247438431)),
    (0.125, (0.21568627655506134, 0.4941176474094391, 0.7215686440467834)),
    (0.25, (0.3019607961177826, 0.686274528503418, 0.29019609093666077)),
    (0.375, (0.5960784554481506, 0.30588236451148987, 0.6392157077789307)),
    (0.5, (1.0, 0.49803921580314636, 0.0)),
    (0.625, (1.0, 1.0, 0.20000000298023224)),
    (0.75, (0.6509804129600525, 0.33725491166114807, 0.1568627506494522)),
    (0.875, (0.9686274528503418, 0.5058823823928833, 0.7490196228027344)),
    (1.0, (0.6000000238418579, 0.6000000238418579, 0.6000000238418579))
]

_Set2_data = [
    (0.0, (0.4000000059604645, 0.7607843279838562, 0.6470588445663452)),
    (0.14285714285714285, (0.9882352948188782, 0.5529412031173706, 0.3843137323856354)),
    (0.2857142857142857, (0.5529412031173706, 0.6274510025978088, 0.7960784435272217)),
    (0.42857142857142855, (0.9058823585510254, 0.5411764979362488, 0.7647058963775635)),
    (0.5714285714285714, (0.6509804129600525, 0.8470588326454163, 0.3294117748737335)),
    (0.7142857142857143, (1.0, 0.8509804010391235, 0.18431372940540314)), 
    (0.8571428571428571, (0.8980392217636108, 0.7686274647712708, 0.5803921818733215)),
    (1.0, (0.7019608020782471, 0.7019608020782471, 0.7019608020782471))
]

_Set3_data = [
    (0.0, (0.5529412031173706, 0.8274509906768799, 0.7803921699523926)),
    (0.09090909090909091, (1.0, 1.0, 0.7019608020782471)),
    (0.18181818181818182, (0.7450980544090271, 0.729411780834198, 0.8549019694328308)),
    (0.2727272727272727, (0.9843137264251709, 0.501960813999176, 0.4470588266849518)),
    (0.36363636363636365, (0.501960813999176, 0.6941176652908325, 0.8274509906768799)),
    (0.45454545454545453, (0.9921568632125854, 0.7058823704719543, 0.3843137323856354)),
    (0.5454545454545454, (0.7019608020782471, 0.8705882430076599, 0.4117647111415863)),
    (0.6363636363636364, (0.9882352948188782, 0.8039215803146362, 0.8980392217636108)),
    (0.7272727272727273, (0.8509804010391235, 0.8509804010391235, 0.8509804010391235)),
    (0.8181818181818182, (0.7372549176216125, 0.501960813999176, 0.7411764860153198)),
    (0.9090909090909091, (0.800000011920929, 0.9215686321258545, 0.772549033164978)),
    (1.0, (1.0, 0.929411768913269, 0.43529412150382996))
]

_Spectral_data = [
    (0.0, (0.6196078658103943, 0.003921568859368563, 0.25882354378700256)),
    (0.1, (0.8352941274642944, 0.24313725531101227, 0.30980393290519714)),
    (0.2, (0.95686274766922, 0.4274509847164154, 0.26274511218070984)),
    (0.3, (0.9921568632125854, 0.6823529601097107, 0.3803921639919281)),
    (0.4, (0.9960784316062927, 0.8784313797950745, 0.545098066329956)),
    (0.5, (1.0, 1.0, 0.7490196228027344)),
    (0.6, (0.9019607901573181, 0.9607843160629272, 0.5960784554481506)),
    (0.7, (0.6705882549285889, 0.8666666746139526, 0.6431372761726379)),
    (0.8, (0.4000000059604645, 0.7607843279838562, 0.6470588445663452)),
    (0.9, (0.19607843458652496, 0.5333333611488342, 0.7411764860153198)),
    (1.0, (0.3686274588108063, 0.30980393290519714, 0.6352941393852234))
]

_YlGn_data = [
    (0.0, (1.0, 1.0, 0.8980392217636108)),
    (0.125, (0.9686274528503418, 0.9882352948188782, 0.7254902124404907)),
    (0.25, (0.8509804010391235, 0.9411764740943909, 0.6392157077789307)),
    (0.375, (0.6784313917160034, 0.8666666746139526, 0.5568627715110779)),
    (0.5, (0.47058823704719543, 0.7764706015586853, 0.4745098054409027)),
    (0.625, (0.2549019753932953, 0.6705882549285889, 0.364705890417099)),
    (0.75, (0.13725490868091583, 0.5176470875740051, 0.26274511218070984)),
    (0.875, (0.0, 0.40784314274787903, 0.21568627655506134)),
    (1.0, (0.0, 0.2705882489681244, 0.16078431904315948))
]

_YlGnBu_data = [
    (0.0, (1.0, 1.0, 0.8509804010391235)),
    (0.125, (0.929411768913269, 0.9725490212440491, 0.6941176652908325)),
    (0.25, (0.7803921699523926, 0.9137254953384399, 0.7058823704719543)),
    (0.375, (0.49803921580314636, 0.8039215803146362, 0.7333333492279053)),
    (0.5, (0.2549019753932953, 0.7137255072593689, 0.7686274647712708)),
    (0.625, (0.11372549086809158, 0.5686274766921997, 0.7529411911964417)),
    (0.75, (0.13333334028720856, 0.3686274588108063, 0.658823549747467)),
    (0.875, (0.14509804546833038, 0.20392157137393951, 0.5803921818733215)),
    (1.0, (0.0313725508749485, 0.11372549086809158, 0.3450980484485626))
]

_YlOrBr_data = [
    (0.0, (1.0, 1.0, 0.8980392217636108)),
    (0.125, (1.0, 0.9686274528503418, 0.7372549176216125)),
    (0.25, (0.9960784316062927, 0.8901960849761963, 0.5686274766921997)),
    (0.375, (0.9960784316062927, 0.7686274647712708, 0.30980393290519714)),
    (0.5, (0.9960784316062927, 0.6000000238418579, 0.16078431904315948)),
    (0.625, (0.9254902005195618, 0.43921568989753723, 0.0784313753247261)),
    (0.75, (0.800000011920929, 0.2980392277240753, 0.007843137718737125)),
    (0.875, (0.6000000238418579, 0.20392157137393951, 0.01568627543747425)),
    (1.0, (0.4000000059604645, 0.14509804546833038, 0.0235294122248888))
]

_YlOrRd_data = [
    (0.0, (1.0, 1.0, 0.800000011920929)),
    (0.125, (1.0, 0.929411768913269, 0.6274510025978088)),
    (0.25, (0.9960784316062927, 0.8509804010391235, 0.4627451002597809)),
    (0.375, (0.9960784316062927, 0.6980392336845398, 0.2980392277240753)),
    (0.5, (0.9921568632125854, 0.5529412031173706, 0.23529411852359772)),
    (0.625, (0.9882352948188782, 0.30588236451148987, 0.16470588743686676)),
    (0.75, (0.8901960849761963, 0.10196078568696976, 0.10980392247438431)),
    (0.875, (0.7411764860153198, 0.0, 0.14901961386203766)),
    (1.0, (0.501960813999176, 0.0, 0.14901961386203766))
]

# This bipolar color map was generated from CoolWarmFloat33.csv of
# "Diverging Color Maps for Scientific Visualization" by Kenneth Moreland.
# <http://www.cs.unm.edu/~kmorel/documents/ColorMaps/>
_coolwarm_data = [
    (0.0, (0.2298057, 0.298717966, 0.753683153)),
    (0.03125, (0.26623388, 0.353094838, 0.801466763)),
    (0.0625, (0.30386891, 0.406535296, 0.84495867)),
    (0.09375, (0.342804478, 0.458757618, 0.883725899)),
    (0.125, (0.38301334, 0.50941904, 0.917387822)),
    (0.15625, (0.424369608, 0.558148092, 0.945619588)),
    (0.1875, (0.46666708, 0.604562568, 0.968154911)),
    (0.21875, (0.509635204, 0.648280772, 0.98478814)),
    (0.25, (0.552953156, 0.688929332, 0.995375608)),
    (0.28125, (0.596262162, 0.726149107, 0.999836203)),
    (0.3125, (0.639176211, 0.759599947, 0.998151185)),
    (0.34375, (0.681291281, 0.788964712, 0.990363227)),
    (0.375, (0.722193294, 0.813952739, 0.976574709)),
    (0.40625, (0.761464949, 0.834302879, 0.956945269)),
    (0.4375, (0.798691636, 0.849786142, 0.931688648)),
    (0.46875, (0.833466556, 0.860207984, 0.901068838)),
    (0.5, (0.865395197, 0.86541021, 0.865395561)),
    (0.53125, (0.897787179, 0.848937047, 0.820880546)),
    (0.5625, (0.924127593, 0.827384882, 0.774508472)),
    (0.59375, (0.944468518, 0.800927443, 0.726736146)),
    (0.625, (0.958852946, 0.769767752, 0.678007945)),
    (0.65625, (0.96732803, 0.734132809, 0.628751763)),
    (0.6875, (0.969954137, 0.694266682, 0.579375448)),
    (0.71875, (0.966811177, 0.650421156, 0.530263762)),
    (0.75, (0.958003065, 0.602842431, 0.481775914)),
    (0.78125, (0.943660866, 0.551750968, 0.434243684)),
    (0.8125, (0.923944917, 0.49730856, 0.387970225)),
    (0.84375, (0.89904617, 0.439559467, 0.343229596)),
    (0.875, (0.869186849, 0.378313092, 0.300267182)),
    (0.90625, (0.834620542, 0.312874446, 0.259301199)),
    (0.9375, (0.795631745, 0.24128379, 0.220525627)),
    (0.96875, (0.752534934, 0.157246067, 0.184115123)),
    (1.0, (0.705673158, 0.01555616, 0.150232812))
]

# An MIT licensed, colorblind-friendly heatmap from Wistia:
#   https://github.com/wistia/heatmap-palette
#   http://wistia.com/blog/heatmaps-for-colorblindness
#
# >>> import matplotlib.colors as c
# >>> colors = ["#e4ff7a", "#ffe81a", "#ffbd00", "#ffa000", "#fc7f00"]
# >>> cm = c.LinearSegmentedColormap.from_list('wistia', colors)
# >>> _wistia_data = cm._segmentdata
# >>> del _wistia_data['alpha']
#
_Wistia_data = [
    (0.0, (0.8941176470588236, 1.0, 0.47843137254901963)),
    (0.25, (1.0, 0.9098039215686274, 0.10196078431372549)),
    (0.5, (1.0, 0.7411764705882353, 0.0)),
    (0.75, (1.0, 0.6274509803921569, 0.0)),
    (1.0, (0.9882352941176471, 0.4980392156862745, 0.0))
]

# The next 7 palettes are from the Yorick scientific visalisation package,
# an evolution of the GIST package, both by David H. Munro.
# They are released under a BSD-like license (see LICENSE_YORICK in
# the license directory of the matplotlib source distribution).
#
# Most palette functions have been reduced to simple function descriptions
# by Reinier Heeres, since the rgb components were mostly straight lines.
# gist_earth_data and gist_ncar_data were simplified by a script and some
# manual effort.

_gist_gray_data = {
    'red': gfunc[3],
    'green': gfunc[3],
    'blue': gfunc[3],
}

_gist_heat_data = {
    'red': lambda x: 1.5 * x,
    'green': lambda x: 2 * x - 1,
    'blue': lambda x: 4 * x - 3,
}

_gist_yarg_data = {
    'red': lambda x: 1 - x,
    'green': lambda x: 1 - x,
    'blue': lambda x: 1 - x,
}

_gist_gray_data = {
    'red': gfunc[3],
    'green': gfunc[3],
    'blue': gfunc[3],
}

_gist_earth_data = {
    'red': ((0.0, 0.0, 0.0000),
            (0.2824, 0.1882, 0.1882),
            (0.4588, 0.2714, 0.2714),
            (0.5490, 0.4719, 0.4719),
            (0.6980, 0.7176, 0.7176),
            (0.7882, 0.7553, 0.7553),
            (1.0000, 0.9922, 0.9922)),
    "green": ((0.0, 0.0, 0.0000),
              (0.0275, 0.0000, 0.0000),
              (0.1098, 0.1893, 0.1893),
              (0.1647, 0.3035, 0.3035),
              (0.2078, 0.3841, 0.3841),
              (0.2824, 0.5020, 0.5020),
              (0.5216, 0.6397, 0.6397),
              (0.6980, 0.7171, 0.7171),
              (0.7882, 0.6392, 0.6392),
              (0.7922, 0.6413, 0.6413),
              (0.8000, 0.6447, 0.6447),
              (0.8078, 0.6481, 0.6481),
              (0.8157, 0.6549, 0.6549),
              (0.8667, 0.6991, 0.6991),
              (0.8745, 0.7103, 0.7103),
              (0.8824, 0.7216, 0.7216),
              (0.8902, 0.7323, 0.7323),
              (0.8980, 0.7430, 0.7430),
              (0.9412, 0.8275, 0.8275),
              (0.9569, 0.8635, 0.8635),
              (0.9647, 0.8816, 0.8816),
              (0.9961, 0.9733, 0.9733),
              (1.0000, 0.9843, 0.9843)),
     "blue": ((0.0, 0.0, 0.0000),
              (0.0039, 0.1684, 0.1684),
              (0.0078, 0.2212, 0.2212),
              (0.0275, 0.4329, 0.4329),
              (0.0314, 0.4549, 0.4549),
              (0.2824, 0.5004, 0.5004),
              (0.4667, 0.2748, 0.2748),
              (0.5451, 0.3205, 0.3205),
              (0.7843, 0.3961, 0.3961),
              (0.8941, 0.6651, 0.6651),
              (1.0000, 0.9843, 0.9843))}

_gist_ncar_data = {
    'red': ((0.0, 0.0, 0.0000),
            (0.3098, 0.0000, 0.0000),
            (0.3725, 0.3993, 0.3993),
            (0.4235, 0.5003, 0.5003),
            (0.5333, 1.0000, 1.0000),
            (0.7922, 1.0000, 1.0000),
            (0.8471, 0.6218, 0.6218),
            (0.8980, 0.9235, 0.9235),
            (1.0000, 0.9961, 0.9961)),
    'green': ((0.0, 0.0, 0.0000),
              (0.0510, 0.3722, 0.3722),
              (0.1059, 0.0000, 0.0000),
              (0.1569, 0.7202, 0.7202),
              (0.1608, 0.7537, 0.7537),
              (0.1647, 0.7752, 0.7752),
              (0.2157, 1.0000, 1.0000),
              (0.2588, 0.9804, 0.9804),
              (0.2706, 0.9804, 0.9804),
              (0.3176, 1.0000, 1.0000),
              (0.3686, 0.8081, 0.8081),
              (0.4275, 1.0000, 1.0000),
              (0.5216, 1.0000, 1.0000),
              (0.6314, 0.7292, 0.7292),
              (0.6863, 0.2796, 0.2796),
              (0.7451, 0.0000, 0.0000),
              (0.7922, 0.0000, 0.0000),
              (0.8431, 0.1753, 0.1753),
              (0.8980, 0.5000, 0.5000),
              (1.0000, 0.9725, 0.9725)),
    'blue': ((0.0, 0.5020, 0.5020),
             (0.0510, 0.0222, 0.0222),
             (0.1098, 1.0000, 1.0000),
             (0.2039, 1.0000, 1.0000),
             (0.2627, 0.6145, 0.6145),
             (0.3216, 0.0000, 0.0000),
             (0.4157, 0.0000, 0.0000),
             (0.4745, 0.2342, 0.2342),
             (0.5333, 0.0000, 0.0000),
             (0.5804, 0.0000, 0.0000),
             (0.6314, 0.0549, 0.0549),
             (0.6902, 0.0000, 0.0000),
             (0.7373, 0.0000, 0.0000),
             (0.7922, 0.9738, 0.9738),
             (0.8000, 1.0000, 1.0000),
             (0.8431, 1.0000, 1.0000),
             (0.8980, 0.9341, 0.9341),
             (1.0000, 0.9961, 0.9961))
}

_gist_stern_data = {
    'red': ((0.000, 0.000, 0.000),
            (0.0547, 1.000, 1.000),
            (0.250, 0.027, 0.250),
            (1.000, 1.000, 1.000)),
    'green': ((0, 0, 0), (1, 1, 1)),
    'blue': ((0.000, 0.000, 0.000),
             (0.500, 1.000, 1.000),
             (0.735, 0.000, 0.000),
             (1.000, 1.000, 1.000))}

_gist_rainbow_data = [
    (0.000, (1.00, 0.00, 0.16)),
    (0.030, (1.00, 0.00, 0.00)),
    (0.215, (1.00, 1.00, 0.00)),
    (0.400, (0.00, 1.00, 0.00)),
    (0.586, (0.00, 1.00, 1.00)),
    (0.770, (0.00, 0.00, 1.00)),
    (0.954, (1.00, 0.00, 1.00)),
    (1.000, (1.00, 0.00, 0.75))
]


data = {key[1:-5]: val for key, val in locals().items()
        if key[0] == "_" and key[-5:] == "_data"}
